import { EntityArea, EntityType, IConfigurationProps } from 'models';
import { t } from 'i18next';

const useModelDefinition = () => {
  const data: IConfigurationProps = {
    [EntityType.Competition]: {
      type: EntityType.Competition,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.competition'),
      displayPlural: t('general.competitions'),
      apiVersion: 'search',
      entityName: 'Competition',
      apiNode: '/competitions',
      path: 'explorer/competitions',
      displayAccessor: 'title',
    },
    [EntityType.Event]: {
      type: EntityType.Event,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.event'),
      displayPlural: t('general.events'),
      entityName: 'Event',
      apiNode: '/events',
      apiVersion: 'search',
      path: 'explorer/events',
      displayAccessor: 'title',
      parentPath: '/explorer/disciplines',
      parentIdAccessor: 'disciplineId',
      parentDisplayAccessor: 'discipline.title',
    },
    [EntityType.Stage]: {
      type: EntityType.Stage,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.stage'),
      displayPlural: t('general.stages'),
      entityName: 'Stage',
      apiNode: '/stages',
      apiVersion: 'search',
      path: 'explorer/stages',
      displayAccessor: 'title',
      parentPath: '/explorer/events',
      parentIdAccessor: 'eventId',
    },
    [EntityType.Phase]: {
      type: EntityType.Phase,
      category: EntityArea.Explorer,
      area: 'Explorer',
      display: t('general.phase'),
      displayPlural: t('general.phases'),
      entityName: 'Phase',
      apiNode: '/phases',
      apiVersion: 'search',
      path: 'explorer/phases',
      displayAccessor: 'title',
      parentPath: '/explorer/stages',
      parentIdAccessor: 'stageId',
    },
    [EntityType.Unit]: {
      type: EntityType.Unit,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.unit'),
      displayPlural: t('general.units'),
      entityName: 'Unit',
      apiNode: '/units',
      apiVersion: 'search',
      path: 'explorer/units',
      displayAccessor: 'title',
      parentPath: '/explorer/phases',
      parentIdAccessor: 'phaseId',
    },
    [EntityType.SubUnit]: {
      type: EntityType.SubUnit,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.subunit'),
      displayPlural: t('general.subunits'),
      entityName: 'SubUnit',
      apiNode: '/subunits',
      apiVersion: 'search',
      path: 'explorer/subunits',
      displayAccessor: 'title',
      parentPath: '/explorer/units',
      parentIdAccessor: 'unitId',
    },
    [EntityType.Person]: {
      type: EntityType.Person,
      category: EntityArea.Explorer,
      area: 'Explorer',
      display: t('general.person'),
      displayPlural: t('general.persons'),
      entityName: 'Person',
      apiNode: '/persons',
      apiVersion: 'search',
      path: 'explorer/persons',
      displayAccessor: 'displayName',
    },
    [EntityType.Horse]: {
      type: EntityType.Horse,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.horse'),
      displayPlural: t('general.horses'),
      entityName: 'Horse',
      apiNode: '/horses',
      apiVersion: 'search',
      path: 'explorer/horses',
      displayAccessor: 'name',
    },
    [EntityType.Team]: {
      type: EntityType.Team,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.team'),
      displayPlural: t('general.teams'),
      entityName: 'Team',
      apiNode: '/teams',
      apiVersion: 'search',
      path: 'explorer/teams',
      displayAccessor: 'name',
    },
    [EntityType.Record]: {
      type: EntityType.Record,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.record'),
      displayPlural: t('general.records'),
      entityName: 'Record',
      apiNode: '/records',
      apiVersion: 'search',
      path: 'explorer/records',
      displayAccessor: 'name',
      parentPath: '/explorer/competitors',
      parentIdAccessor: 'competitorId',
    },
    [EntityType.Award]: {
      type: EntityType.Award,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.award'),
      displayPlural: t('general.awards'),
      entityName: 'Award',
      apiNode: '/awards',
      apiVersion: 'search',
      path: 'explorer/awards',
      displayAccessor: 'class',
      parentPath: '/explorer/competitors',
      parentIdAccessor: 'competitorId',
    },
    [EntityType.Organization]: {
      type: EntityType.Organization,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.organisation'),
      displayPlural: t('general.organisations'),
      entityName: 'Organization',
      apiNode: '/organisations',
      apiVersion: 'search',
      path: 'explorer/organisations',
      displayAccessor: 'name',
    },
    [EntityType.Noc]: {
      type: EntityType.Noc,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.noc'),
      displayPlural: t('general.nocs'),
      entityName: 'Noc',
      apiNode: '/nocs',
      apiVersion: 'search',
      path: 'explorer/nocs',
      displayAccessor: 'name',
    },
    [EntityType.Venue]: {
      type: EntityType.Venue,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.venue'),
      displayPlural: t('general.venues'),
      entityName: 'Venue',
      apiNode: '/venues',
      apiVersion: 'search',
      path: 'explorer/venues',
      displayAccessor: 'name',
    },
    [EntityType.Discipline]: {
      type: EntityType.Discipline,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.discipline'),
      displayPlural: t('general.disciplines'),
      entityName: 'Discipline',
      apiNode: '/disciplines',
      apiVersion: 'search',
      path: 'explorer/disciplines',
      displayAccessor: 'title',
      parentPath: '/explorer/competitions',
      parentIdAccessor: 'competitionId',
      parentDisplayAccessor: 'competition.title',
    },
    [EntityType.Participant]: {
      type: EntityType.Participant,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.participants'),
      displayPlural: t('general.participants'),
      entityName: 'Participant',
      apiNode: '/participants',
      apiVersion: 'search',
      path: 'explorer/participants',
      displayAccessor: 'participationName',
      parentPath: '/explorer/disciplines',
      parentIdAccessor: 'disciplineId',
    },
    [EntityType.Competitor]: {
      type: EntityType.Competitor,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.competitor'),
      displayPlural: t('general.competitors'),
      entityName: 'Competitor',
      apiNode: '/competitors',
      apiVersion: 'search',
      path: 'explorer/competitors',
      displayAccessor: 'participationName',
      parentPath: '/explorer/events',
      parentIdAccessor: 'eventId',
    },
    [EntityType.ParticipantCompetition]: {
      type: EntityType.ParticipantCompetition,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.competition'),
      displayPlural: t('general.competitions'),
      entityName: 'ParticipantCompetition',
      apiNode: '/competitions',
      apiVersion: 'search',
      path: 'explorer/competitions',
      displayAccessor: 'title',
    },
    [EntityType.GlobalSetup]: {
      type: EntityType.GlobalSetup,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('navigation.globalSetup'),
      displayPlural: t('navigation.globalSetup'),
      entityName: 'GlobalSetup',
      apiNode: '/monitor/global-setup',
      apiVersion: 'search',
      path: 'tools/global-setup',
      displayAccessor: 'id',
    },
    [EntityType.SecurityUser]: {
      type: EntityType.SecurityUser,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('navigation.SecurityUser'),
      displayPlural: t('navigation.SecurityUser'),
      entityName: 'SecurityUser',
      apiNode: '/security/users',
      apiVersion: 'search',
      path: 'tools/security-manager/users',
      displayAccessor: 'username',
    },
    [EntityType.SecurityClient]: {
      type: EntityType.SecurityClient,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('navigation.SecurityClient'),
      displayPlural: t('navigation.SecurityClient'),
      entityName: 'SecurityClient',
      apiNode: '/security/clients',
      apiVersion: 'filter',
      path: 'tools/security-manager/clients',
      displayAccessor: 'clientId',
    },
    [EntityType.AccessRequest]: {
      type: EntityType.AccessRequest,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('navigation.AccessRequest'),
      displayPlural: t('navigation.AccessRequest'),
      entityName: 'AccessRequest',
      apiNode: '/security/access-requests',
      apiVersion: 'filter',
      path: 'tools/access-requests',
      displayAccessor: 'name',
    },
    [EntityType.Category]: {
      type: EntityType.Category,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('general.master_category'),
      displayPlural: t('general.master_categories'),
      entityName: 'MasterDataCategory',
      apiNode: '/v1/categories',
      apiVersion: 'master',
      path: 'tools/master/categories',
      displayAccessor: 'id',
    },
    [EntityType.Entry]: {
      type: EntityType.Entry,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('general.master_entry'),
      displayPlural: t('general.master_entries'),
      entityName: 'MasterDataEntry',
      apiNode: '/v1/entries/byCategoryKey',
      apiVersion: 'master',
      path: 'tools/master/entries',
      displayAccessor: 'value',
      parentPath: '/tools/master/categories',
    },
    [EntityType.Mapping]: {
      type: EntityType.Mapping,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('general.mapping'),
      displayPlural: t('general.mappings'),
      entityName: 'Mapping',
      apiVersion: 'master',
      apiNode: '/v1/mapping/to',
      path: 'tools/master/mappings',
      displayAccessor: 'value',
    },
    [EntityType.Translation]: {
      type: EntityType.Translation,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('general.translation'),
      displayPlural: t('general.translations'),
      entityName: 'Translation',
      apiNode: '/v1/translation/forEntry/byEntryKey',
      apiVersion: 'master',
      path: 'tools/master/translations',
      displayAccessor: 'value',
    },
    [EntityType.OdfIngest]: {
      type: EntityType.OdfIngest,
      category: EntityArea.Ingestion,
      area: t('navigation.Ingest'),
      display: t('general.odfTrackingSystem'),
      displayPlural: t('general.odfTrackingSystem'),
      entityName: 'ODF Ingest',
      apiNode: '/log-service/odf',
      apiVersion: 'filter',
      path: 'tools/odf',
      displayAccessor: 'ingest.documentCode',
    },
    [EntityType.UsdfIngest]: {
      type: EntityType.UsdfIngest,
      category: EntityArea.Ingestion,
      area: t('navigation.Ingest'),
      display: t('general.usdftrackingSystem'),
      displayPlural: t('general.usdftrackingSystem'),
      entityName: 'USDF Ingest',
      apiNode: '/log-service/usdf',
      apiVersion: 'filter',
      path: 'tools/usdf',
      displayAccessor: 'ingest.type',
    },
    [EntityType.CompetitionStructure]: {
      type: EntityType.CompetitionStructure,
      category: EntityArea.Ingestion,
      area: t('navigation.Ingest'),
      display: t('general.competitionStructure'),
      displayPlural: t('general.competitionStructure'),
      entityName: 'CompetitionStructure',
      apiNode: '/structure',
      apiVersion: 'filter',
      path: 'tools/odf/structure',
      displayAccessor: 'description',
    },
    [EntityType.Official]: {
      type: EntityType.Official,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.officials'),
      displayPlural: t('general.officials'),
      entityName: 'Official',
      apiNode: '/officials',
      apiVersion: 'search',
      path: 'explorer/officials',
      displayAccessor: 'participationName',
    },

    [EntityType.ScheduleItem]: {
      type: EntityType.ScheduleItem,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.schedule'),
      displayPlural: t('general.schedules'),
      entityName: 'ScheduleItem',
      apiNode: '/extended/schedule-items',
      apiVersion: 'search',
      path: 'explorer/schedules',
      displayAccessor: 'title',
    },
    [EntityType.MergeRequest]: {
      type: EntityType.MergeRequest,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('general.mergeRequest'),
      displayPlural: t('general.mergeRequest'),
      entityName: 'MergeRequest',
      apiNode: '/usdm-consolidation/consolidation-requests',
      apiVersion: 'filter',
      path: 'tools/merge-requests',
      displayAccessor: 'title',
    },
    [EntityType.DataIngest]: {
      type: EntityType.DataIngest,
      category: EntityArea.Tools,
      area: t('general.tools'),
      display: t('general.dataIngest'),
      displayPlural: t('general.dataIngest'),
      entityName: 'DataIngest',
      apiNode: '/data-ingest',
      apiVersion: 'filter',
      path: 'tools/data-ingest',
      displayAccessor: 'mappingName',
    },
    [EntityType.Result]: {
      type: EntityType.Result,
      category: EntityArea.Explorer,
      area: t('navigation.Explorer'),
      display: t('general.result'),
      displayPlural: t('general.result'),
      entityName: 'results',
      apiNode: '/results',
      apiVersion: 'filter',
      path: 'explorer/results',
      displayAccessor: 'value',
    },
    [EntityType.HeadToHead]: {
      type: EntityType.HeadToHead,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: t('navigation.HeadToHead'),
      displayPlural: t('navigation.HeadToHead'),
      entityName: 'HeadToHead',
      apiNode: '/h2h',
      apiVersion: 'filter',
      path: 'biographies-manager/h2h',
      displayAccessor: 'display',
    },
    [EntityType.Esl]: {
      type: EntityType.Esl,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: t('navigation.StartLists'),
      displayPlural: t('navigation.StartLists'),
      entityName: 'Esl',
      apiNode: '/esl',
      apiVersion: 'filter',
      path: 'biographies-manager/esl',
      displayAccessor: 'display',
    },
    [EntityType.QualifiedAthlete]: {
      type: EntityType.QualifiedAthlete,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: t('navigation.QualifiedAthletes'),
      displayPlural: t('navigation.QualifiedAthletes'),
      entityName: 'QualifiedAthlete',
      apiNode: '/qualifiers',
      apiVersion: 'filter',
      path: 'biographies-manager/qualifiers/athletes',
      displayAccessor: 'displayName',
    },
    [EntityType.QualifiedTeam]: {
      type: EntityType.QualifiedTeam,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: t('navigation.QualifiedTeams'),
      displayPlural: t('navigation.QualifiedTeams'),
      entityName: 'QualifiedTeam',
      apiNode: '/qualifiers/teams',
      apiVersion: 'filter',
      path: 'biographies-manager/qualifiers/teams',
      displayAccessor: 'name',
    },
    [EntityType.QualifiedHorse]: {
      type: EntityType.QualifiedHorse,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: t('navigation.QualifiedHorses'),
      displayPlural: t('navigation.QualifiedHorses'),
      entityName: 'QualifiedHorse',
      apiNode: '/qualifiers/horses',
      apiVersion: 'filter',
      path: 'biographies-manager/qualifiers/horses',
      displayAccessor: 'name',
    },
    [EntityType.PersonBiography]: {
      type: EntityType.PersonBiography,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: `${t('general.person')} Biography`,
      displayPlural: `${t('general.person')} Biographies`,
      entityName: 'Person',
      apiNode: '/persons',
      apiVersion: 'filter',
      path: 'biographies-manager/biographies/persons',
      displayAccessor: 'displayName',
    },
    [EntityType.HorseBiography]: {
      type: EntityType.HorseBiography,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: `${t('general.horse')} Biography`,
      displayPlural: `${t('general.horse')} Biographies`,
      entityName: 'Horse',
      apiNode: '/horses',
      apiVersion: 'filter',
      path: 'biographies-manager/biographies/horses',
      displayAccessor: 'name',
    },
    [EntityType.TeamBiography]: {
      type: EntityType.TeamBiography,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: `${t('general.team')} Biography`,
      displayPlural: `${t('general.team')} Biographies`,
      entityName: 'Team',
      apiNode: '/teams',
      apiVersion: 'filter',
      path: 'biographies-manager/biographies/teams',
      displayAccessor: 'name',
    },
    [EntityType.NocBiography]: {
      type: EntityType.NocBiography,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: `${t('general.noc')} Biography`,
      displayPlural: `${t('general.noc')} Biographies`,
      entityName: 'Noc',
      apiNode: '/nocs',
      apiVersion: 'filter',
      path: 'biographies-manager/biographies/nocs',
      displayAccessor: 'name',
    },
    [EntityType.BiographyQuota]: {
      type: EntityType.BiographyQuota,
      category: EntityArea.BiographiesManager,
      area: t('navigation.BiographiesManager'),
      display: `Biography Quota`,
      displayPlural: `Biography Quotas`,
      entityName: 'BiographyQuota',
      apiNode: '/quotas',
      apiVersion: 'filter',
      path: 'biographies-manager/quotas',
      displayAccessor: 'displayName',
    },
    [EntityType.Edition]: {
      type: EntityType.Edition,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Edition`,
      displayPlural: `Editions`,
      entityName: 'Edition',
      apiNode: '/editions',
      apiVersion: 'filter',
      path: 'reports-manager/editions',
      displayAccessor: 'name',
    },
    [EntityType.ReportCategory]: {
      type: EntityType.ReportCategory,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Report Category`,
      displayPlural: `Report Categories`,
      entityName: 'ReportCategory',
      apiNode: '/categories',
      apiVersion: 'filter',
      path: 'reports-manager/categories',
      displayAccessor: 'name',
      parentIdAccessor: 'edition.id',
      parentDisplayAccessor: 'edition.name',
    },
    [EntityType.ReportSection]: {
      type: EntityType.ReportSection,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Section`,
      displayPlural: `Sections`,
      entityName: 'Section',
      apiNode: '/sections',
      apiVersion: 'filter',
      path: 'reports-manager/sections',
      displayAccessor: 'displayName',
      parentIdAccessor: 'variation.id',
      parentDisplayAccessor: 'variation.name',
    },
    [EntityType.ReportBlock]: {
      type: EntityType.ReportBlock,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Block`,
      displayPlural: `Blocks`,
      entityName: 'ReportBlock',
      apiNode: '/blocks',
      apiVersion: 'filter',
      path: 'reports-manager/blocks',
      displayAccessor: 'displayName',
      parentIdAccessor: 'section.id',
      parentDisplayAccessor: 'section.name',
    },
    [EntityType.ReportField]: {
      type: EntityType.ReportField,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Field`,
      displayPlural: `Fields`,
      entityName: 'ReportField',
      apiNode: '/fields',
      apiVersion: 'filter',
      path: 'reports-manager/fields',
      displayAccessor: 'displayName',
      parentIdAccessor: 'section.id',
      parentDisplayAccessor: 'section.name',
    },
    [EntityType.ReportFilter]: {
      type: EntityType.ReportFilter,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Filter/Condition`,
      displayPlural: `Filters & Conditions`,
      entityName: 'ReportFilter',
      apiNode: '/filters',
      apiVersion: 'filter',
      path: 'reports-manager/filters',
      displayAccessor: 'displayName',
      parentIdAccessor: 'section.id',
      parentDisplayAccessor: 'section.name',
    },
    [EntityType.ReportVariation]: {
      type: EntityType.ReportVariation,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Variation`,
      displayPlural: `Variations`,
      entityName: 'ReportVariation',
      apiNode: '/variations',
      apiVersion: 'filter',
      path: 'reports-manager/variations',
      displayAccessor: 'name',
      parentIdAccessor: 'category.id',
      parentDisplayAccessor: 'category.name',
    },
    [EntityType.ReportSource]: {
      type: EntityType.ReportSource,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Report Source`,
      displayPlural: `Report Sources`,
      entityName: 'ReportSource',
      apiNode: '/sources',
      apiVersion: 'filter',
      path: 'reports-manager/sources',
      displayAccessor: 'displayName',
    },
    [EntityType.Report]: {
      type: EntityType.Report,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Report`,
      displayPlural: `Reports`,
      entityName: 'Report',
      apiNode: '/reports',
      apiVersion: 'filter',
      path: 'reports-manager/reports',
      displayAccessor: 'displayName',
      parentIdAccessor: 'variation.id',
      parentDisplayAccessor: 'variation.name',
    },
    [EntityType.GdsDashboard]: {
      type: EntityType.GdsDashboard,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: 'GdsDashboard',
      displayPlural: 'GdsDashboards',
      entityName: 'GdsDashboard',
      apiNode: '/reports',
      apiVersion: 'filter',
      path: 'reports-manager/gds-dashboards',
      displayAccessor: 'displayName',
    },
    [EntityType.DeliveryPlan]: {
      type: EntityType.DeliveryPlan,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: t('general.delivery-plan'),
      displayPlural: t('delivery-plans'),
      entityName: 'DeliveryPlan',
      apiNode: '/plans',
      apiVersion: 'filter',
      path: 'reports-manager/delivery-plans',
      displayAccessor: 'displayName',
      parentIdAccessor: 'edition.id',
      parentDisplayAccessor: 'edition.name',
    },
    [EntityType.DeliveryDataScope]: {
      type: EntityType.DeliveryDataScope,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: t('general.delivery-data-scope'),
      displayPlural: t('general.delivery-data-scope'),
      entityName: 'DeliveryDataScope',
      apiNode: '/scope',
      apiVersion: 'filter',
      path: 'reports-manager/data-scope',
      displayAccessor: 'displayName',
      parentIdAccessor: 'edition.id',
      parentDisplayAccessor: 'edition.name',
    },
    [EntityType.ReportDelivery]: {
      type: EntityType.ReportDelivery,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: `Report Delivery`,
      displayPlural: `Report Deliveries`,
      entityName: 'ReportDelivery',
      apiNode: '/delivery',
      apiVersion: 'filter',
      path: 'reports-manager/deliveries',
      displayAccessor: 'displayName',
      parentIdAccessor: 'deliveryPlan.id',
      parentDisplayAccessor: 'deliveryPlan.displayName',
    },
    [EntityType.ExtractorParticipant]: {
      type: EntityType.ExtractorParticipant,
      category: EntityArea.ReportsManager,
      area: t('navigation.ReportsManager'),
      display: t('general.extractions'),
      displayPlural: t('general.extractions'),
      entityName: 'ExtractorParticipant',
      apiNode: '/extractor',
      apiVersion: 'search',
      path: 'reports-manager/extractor',
      displayAccessor: 'displayName',
    },
  };
  return {
    modelConfig: data,
  };
};
export default useModelDefinition;
